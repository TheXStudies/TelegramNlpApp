# сначала идёт блок импорта нативных для Питона библиотек
# т.е. тех, которые входят в стандартную поставку интерпретора и
# не устанавливаются отдельно
# пример: os, sys
# в данном файле таковых нет

# дальше импорты основопологающего фреймворка для приложения, если есть
# Например, Django/Flask. В нашем случае ничего такого

# дальше импорт сторонних библиотек, нужных нам в этом модуле
import yaml

# последним идёт блок импортов модулей самого приложения
from collector import collect_tg_messages
from processor import process_messages

# заглавными буквами пишут переменную, которая используется как константа
# то есть, не будет менять значение в течении использования
# здесь вы можете задать название канала
CHANNEL_NAME = 'ru_python_beginners'

# загрузка или обработка
# вторая опция: "process"
OPERATION = "process"


# эта строка, по сути, выполняет код, только если мы запустили модуль напрямую,
# а не импортировали откуда-то. Используется для модулей, которые могут быть
# и самостоятельными и включаться как часть чего-то
if __name__ == '__main__':
    # здесь 2 блока
    # по сути, я меняю вручную значение глобальной константы, что бы управлять тем
    # что я хочу сделать - загрузить или обработать данные
    # это упрощённый негибкий вариант. Намного лучше использовать параметры командной
    # строки, например click и дать возможность пользователю задать тип операции через
    # параметр

    if OPERATION == 'collect':
        # сохраняем данные в файл, формируя его имя на основе константы `CHANNEL_NAME`
        # с файлом мы работаем через переменую f
        with open(f"{CHANNEL_NAME}.yml", 'w') as f:
            # здесь цепочка: сначала вызовется функция `collect_tg_messages`,
            # в которую мы передали название канала и количество сообщений
            # когда ф-ция выполнится, на её месте вставится возвращаемое (return) или
            # выдаваемое (yield) значение,
            # которое обработает уже yaml.safe_dump_all, записывая в файл в формате
            # yaml
            yaml.safe_dump_all(
                collect_tg_messages(CHANNEL_NAME, msg_count=10000), f)

    # второй блок. Обработка
    if OPERATION == 'process':
        # считываем данные из файла, формируя его имя на основе константы `CHANNEL_NAME`
        # дальше передаём в функцию
        with open(f"{CHANNEL_NAME}.yml") as f:
            extracted_messages = yaml.unsafe_load_all(f)
            process_messages(extracted_messages)
